{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/elias/github/AwesomeProject/components/LoginScreen.tsx\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  function checkUserAlreadyLogged() {\n    var userAlreadyLogged;\n    return _regeneratorRuntime.async(function checkUserAlreadyLogged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"logged\"));\n\n          case 3:\n            userAlreadyLogged = _context.sent;\n\n            if (!!userAlreadyLogged) {\n              navigation.navigate(\"Home\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  useEffect(function () {\n    checkUserAlreadyLogged();\n  });\n\n  function login() {\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"logged\", \"true\"));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function goSignIn() {\n    navigation.navigate(\"SignIn\");\n  }\n\n  return React.createElement(View, {\n    style: styles.containerCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, React.createElement(View, {\n    style: styles.containerForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"jon.doe@gmail.com\",\n    autoCompleteType: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    autoCompleteType: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }), React.createElement(Button, {\n    title: \"Se connecter\",\n    onPress: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  containerCenter: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"stretch\"\n  },\n  input: {\n    borderWidth: 0.5,\n    borderColor: \"#1d1d1d\",\n    padding: 10,\n    marginBottom: 10\n  },\n  containerForm: {\n    marginHorizontal: 40\n  }\n});","map":{"version":3,"sources":["/home/elias/github/AwesomeProject/components/LoginScreen.tsx"],"names":["React","useEffect","LoginScreen","navigation","checkUserAlreadyLogged","AsyncStorage","getItem","userAlreadyLogged","navigate","console","log","login","setItem","goSignIn","styles","containerCenter","containerForm","input","StyleSheet","create","flex","justifyContent","alignItems","borderWidth","borderColor","padding","marginBottom","marginHorizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAIA,OAAO,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1C,WAAeC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAFpC;;AAAA;AAEUC,YAAAA,iBAFV;;AAGI,gBAAI,CAAC,CAACA,iBAAN,EAAyB;AACvBJ,cAAAA,UAAU,CAACK,QAAX,CAAoB,MAApB;AACD;;AALL;AAAA;;AAAA;AAAA;AAAA;AAOIC,YAAAA,OAAO,CAACC,GAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAT,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,sBAAsB;AACvB,GAFQ,CAAT;;AAIA,WAAeO,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUN,YAAY,CAACO,OAAb,CAAqB,QAArB,EAA+B,MAA/B,CAFV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIIH,YAAAA,OAAO,CAACC,GAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,WAASG,QAAT,GAAoB;AAClBV,IAAAA,UAAU,CAACK,QAAX,CAAoB,QAApB;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,KADhB;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,gBAAgB,EAAC,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACG,KADhB;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,gBAAgB,EAAC,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEN,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF;AAiBD;AAED,IAAMG,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,cAAc,EAAE,QAFD;AAGfC,IAAAA,UAAU,EAAE;AAHG,GADc;AAM/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,WAAW,EAAE,GADR;AAELC,IAAAA,WAAW,EAAE,SAFR;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,YAAY,EAAE;AAJT,GANwB;AAY/BV,EAAAA,aAAa,EAAE;AACbW,IAAAA,gBAAgB,EAAE;AADL;AAZgB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, TextInput, Button, Alert } from \"react-native\";\nimport { AsyncStorage } from \"react-native\";\n\nexport function LoginScreen({ navigation }) {\n  async function checkUserAlreadyLogged() {\n    try {\n      const userAlreadyLogged = await AsyncStorage.getItem(\"logged\");\n      if (!!userAlreadyLogged) {\n        navigation.navigate(\"Home\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    checkUserAlreadyLogged();\n  });\n\n  async function login() {\n    try {\n      await AsyncStorage.setItem(\"logged\", \"true\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  function goSignIn() {\n    navigation.navigate(\"SignIn\");\n  }\n\n  return (\n    <View style={styles.containerCenter}>\n      <View style={styles.containerForm}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"jon.doe@gmail.com\"\n          autoCompleteType=\"email\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"password\"\n          autoCompleteType=\"password\"\n        />\n        <Button title=\"Se connecter\" onPress={login} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  containerCenter: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"stretch\"\n  },\n  input: {\n    borderWidth: 0.5,\n    borderColor: \"#1d1d1d\",\n    padding: 10,\n    marginBottom: 10\n  },\n  containerForm: {\n    marginHorizontal: 40\n  }\n});\n"]},"metadata":{},"sourceType":"module"}