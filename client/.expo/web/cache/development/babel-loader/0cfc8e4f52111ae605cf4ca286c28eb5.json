{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/elias/github/AwesomeProject/App.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar Stack = createStackNavigator();\nimport { LoginScreen } from \"./components/LoginScreen\";\nimport { HomeScreen } from \"./components/HomeScreen\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  function checkUserAlreadyLogged() {\n    var userAlreadyLogged;\n    return _regeneratorRuntime.async(function checkUserAlreadyLogged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"logged\"));\n\n          case 3:\n            userAlreadyLogged = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  useEffect(function () {\n    checkUserAlreadyLogged();\n  });\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      }\n    }, \"Ecran de chargement\"));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#1d1d1d\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {},\n      headerTitleAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  })));\n}","map":{"version":3,"sources":["/home/elias/github/AwesomeProject/App.tsx"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","Stack","LoginScreen","HomeScreen","App","isLoading","setIsLoading","checkUserAlreadyLogged","AsyncStorage","getItem","userAlreadyLogged","console","log","flex","justifyContent","alignItems","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","headerTitleAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAIA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AAEA,SAASE,WAAT;AAEA,SAASC,UAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACMP,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,MACrBQ,SADqB;AAAA,MACVC,YADU;;AAG5B,WAAeC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAFpC;;AAAA;AAEUC,YAAAA,iBAFV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIIC,YAAAA,OAAO,CAACC,GAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAd,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,sBAAsB;AACvB,GAFQ,CAAT;;AAIA,MAAIF,SAAJ,EAAe;AACb,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACQ,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,cAAc,EAAE,QAA1B;AAAoCC,QAAAA,UAAU,EAAE;AAAhD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAKD;;AAED,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,OADnB;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OADA;AAIbC,MAAAA,eAAe,EAAE,MAJJ;AAKbC,MAAAA,gBAAgB,EAAE,EALL;AAMbC,MAAAA,gBAAgB,EAAE;AANL,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAElB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { AsyncStorage } from \"react-native\";\n\nconst Stack = createStackNavigator();\n\nimport { LoginScreen } from \"./components/LoginScreen\";\nimport { SignInScreen } from \"./components/SignInScreen\";\nimport { HomeScreen } from \"./components/HomeScreen\";\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  async function checkUserAlreadyLogged() {\n    try {\n      const userAlreadyLogged = await AsyncStorage.getItem(\"logged\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    checkUserAlreadyLogged();\n  });\n\n  if (isLoading) {\n    return (\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n        <Text>Ecran de chargement</Text>\n      </View>\n    );\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"Login\"\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: \"#1d1d1d\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {},\n          headerTitleAlign: \"center\"\n        }}>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n/* <Stack.Screen name=\"SignIn\" component={SignInScreen} /> */\n"]},"metadata":{},"sourceType":"module"}